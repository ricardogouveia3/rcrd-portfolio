{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/job-list/job-list.component.ts","webpack:///src/app/components/job-list/job-list.component.html","webpack:///src/app/components/single-job/single-job.component.ts","webpack:///src/app/components/single-job/single-job.component.html","webpack:///src/app/services/portfolio.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","HeaderComponent","JobListComponent","portfolioService","jobList","fetchPortfolioData","subscribe","response","data","push","window","addEventListener","event","captureScroll","innerWidth","preventDefault","deltaY","jobListElement","nativeElement","scrollLeft","deltaX","SingleJobComponent","jobIndex","toString","PortfolioService","http","getPortfolioData","pipe","console","error","getBackupPortfolioData","get","providedIn","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'rcrd-portfolio';\n}\n","<div>\n  <app-header></app-header>\n  <app-job-list></app-job-list>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { JobListComponent } from './components/job-list/job-list.component';\nimport { SingleJobComponent } from './components/single-job/single-job.component';\n\n@NgModule({\n  declarations: [AppComponent, HeaderComponent, JobListComponent, SingleJobComponent],\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.sass']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header>\n  <div class=\"container\">\n    <a href=\"/\" class=\"header-link\">\n      <img src=\"assets/img/logo-w.svg\" alt=\"\">\n      <h1>portfolio</h1>\n    </a>\n    <div class=\"options\">\n      <button id=\"filter\">\n        <img src=\"assets/img/icons/filter.svg\" alt=\"\">\n      </button>\n      <button id=\"search\">\n        <img src=\"assets/img/icons/search.svg\" alt=\"\">\n      </button>\n    </div>\n  </div>\n</header>\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  AfterViewInit,\n} from '@angular/core';\nimport { PortfolioService } from '../../services/portfolio.service';\n\n@Component({\n  selector: 'app-job-list',\n  templateUrl: './job-list.component.html',\n  styleUrls: ['./job-list.component.sass'],\n})\nexport class JobListComponent implements OnInit, AfterViewInit {\n  constructor(private portfolioService: PortfolioService) {}\n  @ViewChild('jobListElement', { static: false }) jobListElement: ElementRef;\n\n  public jobList: Array<object> = [];\n\n  ngOnInit(): void {\n    this.portfolioService.fetchPortfolioData().subscribe((response) => {\n      response.data ? this.jobList.push(...response.data) : this.jobList.push(...response);\n    });\n  }\n\n  ngAfterViewInit(): void {\n    window.addEventListener(\n      'wheel',\n      (event) => {\n        this.captureScroll(event);\n      },\n      false\n    );\n  }\n\n  private captureScroll(event) {\n    if (window.innerWidth >= 700) {\n      event.preventDefault();\n\n      if (event.deltaY) {\n        this.jobListElement.nativeElement.scrollLeft += event.deltaY;\n      } else if (event.deltaX) {\n        this.jobListElement.nativeElement.scrollLeft += -event.deltaX;\n      }\n    }\n  }\n}\n","<main #mainElement>\n  <ul #jobListElement>\n    <app-single-job [job]=\"job\" [jobIndex]=\"i\" *ngFor=\"let job of jobList; let i = index\"></app-single-job>\n  </ul>\n</main>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-single-job',\n  templateUrl: './single-job.component.html',\n  styleUrls: ['./single-job.component.sass'],\n})\nexport class SingleJobComponent implements OnInit {\n  @Input() job: any;\n  @Input() jobIndex: any;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.jobIndex = this.jobIndex + 1;\n    this.jobIndex < 10 ? (this.jobIndex = '0' + this.jobIndex.toString()) : '';\n  }\n}\n","<li>\n  <a href=\"{{ job.link }}\" target=\"_blank\" [ngStyle]=\"{'background-color': job.bgColor}\">\n    <div class=\"white\"></div>\n    <div class=\"content\">\n      <div class=\"text\">\n        <span class=\"index\">{{ jobIndex }}</span>\n        <h2>{{ job.title }}</h2>\n      </div>\n    </div>\n    <span class=\"type\">{{ job.type }}</span>\n  </a>\n</li>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PortfolioService {\n  constructor(private http: HttpClient) {}\n\n  public fetchPortfolioData(): Observable<any> {\n    return this.getPortfolioData.pipe(\n      catchError(() => {\n        console.error('Failed to fetch portfolio data. Using backup JSON');\n        return this.getBackupPortfolioData;\n      })\n    );\n  }\n\n  get getPortfolioData(): Observable<any> {\n    return this.http\n      .get('https://api.rcrd.dev/portfolio');\n  }\n\n  get getBackupPortfolioData(): Observable<any> {\n    return this.http\n      .get('data/backup-portfolio.json');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}